using Logger;
using NUnit.Framework;
using System.Collections.Generic;

namespace GapUITesting.GAPIdentity.Join.Steps
{
    [TestFixture("IE")]
    public class TestCaseValidData
    {

        //Valid users paths
        public static readonly string validuserpath = TestContext.Parameters["AutogeneratedUsersPath"]; //Path
        public static readonly UserGenerator.GenerateUsers users = new UserGenerator.GenerateUsers();   //Generate users
        public static Logdesign log = new Logdesign();                                                  //Log


        #region Get VALID users data: email, firstname, lastname, password
        /// <summary>         
        /// Get VALID users data, email, firstname, lastname, password
        /// </summary>
        public static IEnumerable<TestCaseData> TestCaseUserValidData()
        {
            var data = users.CreateUser();
            yield return new TestCaseData(data.Email, data.FirstName, data.LastName, data.Password);

        }

        #endregion


        #region Get users data: firstname, lastname, password
        /// <summary>         
        /// Get  users data,  firstname, lastname, password
        /// </summary>
        public static IEnumerable<TestCaseData> TestCaseUserEmail()
        {
            var data = users.CreateUser();
            yield return new TestCaseData(data.FirstName, data.LastName, data.Password);

        }

        #endregion


        #region Get users data: email,  lastname, password
        /// <summary>         
        /// Get  users data, email,  lastname, password
        /// </summary>
        public static IEnumerable<TestCaseData> TestCaseUserName()
        {
            var data = users.CreateUser();
            yield return new TestCaseData(data.Email, data.LastName, data.Password);

        }
        #endregion


        #region Get users data: email, firstname, lastname 
        /// <summary>         
        /// Get users data: email, firstname, lastname, 
        /// </summary>
        public static IEnumerable<TestCaseData> TestCaseUserPsw()
        {
            var data = users.CreateUser();
            yield return new TestCaseData(data.Email, data.FirstName, data.LastName);

        }
        #endregion

    }

}
